
// void pipe_exec(t_tree_node *node)
// {
// 	int pipefd[2];
// 	pid_t pid;
// 	int status;

// 	if (pipe(pipefd) == -1)
// 		return ;

// 	pid = fork();
// 	if (pid == -1)
// 		return ;
// 	if (pid == 0)
// 		left_node(node, pipefd);
// 	right_node(node, pipefd);
// 		waitpid(pid, &status, 0);
// 	// Parent: close pipe
// 	// close(pipefd[0]);
// 	// close(pipefd[1]);
// }

// void pipe_exec(t_tree_node *node)
// {
// 	int pipefd[2];
// 	pid_t left_pid, right_pid;
// 	int status;

// 	if (pipe(pipefd) == -1)
// 		return ;

// 	left_pid = fork();
// 	if (left_pid == -1)
// 		return ;
// 	if (left_pid == 0)
// 		left_node(node, pipefd);

// 	right_pid = fork();
// 	if (right_pid == -1)
// 		return ;
// 	if (right_pid == 0)
// 		right_node(node, pipefd);
	
// 	// Parent: close pipe
// 	close(pipefd[0]);
// 	close(pipefd[1]);

// 	waitpid(left_pid, &status, 0);
// 	waitpid(right_pid, &status, 0);

	
// }
