int	handle_redirections_inline(t_tree_node *node, t_envp *env)
{
	int	fd;

	if (!node || !node->redir_arg)
		return (0);

	if (node->token == LEFT_REDIRECTION)
	{
		fd = open(node->redir_arg, O_RDONLY);
		if (fd == -1)
		{
			ft_putstr_fd("minishell: ", 2);
			ft_putstr_fd(node->redir_arg, 2);
			ft_putstr_fd(": ", 2);
			ft_putendl_fd(strerror(errno), 2);
			env->exit_code = 1;
			exit(1);
		}
		dup2(fd, STDIN_FILENO);
		close(fd);
	}
	else if (node->token == RIGHT_REDIRECTION)
	{
		fd = open(node->redir_arg, O_WRONLY | O_CREAT | O_TRUNC, 0644);
		if (fd == -1)
		{
			ft_putstr_fd("minishell: ", 2);
			ft_putstr_fd(node->redir_arg, 2);
			ft_putstr_fd(": ", 2);
			ft_putendl_fd(strerror(errno), 2);
			env->exit_code = 1;
			exit(1);
		}
		dup2(fd, STDOUT_FILENO);
		close(fd);
	}
	else if (node->token == RIGHT_D_REDIRECTION)
	{
		fd = open(node->redir_arg, O_WRONLY | O_CREAT | O_APPEND, 0644);
		if (fd == -1)
		{
			ft_putstr_fd("minishell: ", 2);
			ft_putstr_fd(node->redir_arg, 2);
			ft_putstr_fd(": ", 2);
			ft_putendl_fd(strerror(errno), 2);
			env->exit_code = 1;
			exit(1);
		}
		dup2(fd, STDOUT_FILENO);
		close(fd);
	}
	else if (node->token == LEFT_D_REDIRECTION)
	{
		int heredoc_fd = open("heredoc_temp.txt", O_RDONLY);
		if (heredoc_fd < 0)
		{
			perror("heredoc");
			exit(1);
		}
		dup2(heredoc_fd, STDIN_FILENO);
		close(heredoc_fd);
		unlink("heredoc_temp.txt");
	}
	return (0);
}


int	exec_commands(t_tree_node *node, t_envp *env)
{
	// Walk up and apply redirections
	t_tree_node *cursor = node->parent;
	while (cursor && cursor->token >= 3 && cursor->token <= 6) // REDIR tokens
	{
		handle_redirections_inline(cursor, env);
		cursor = cursor->parent;
	}

	// Do the actual execve
	if (is_builtin(node->data))
		run_builtin(node, env);
	else
		run_external(node, env); // fork + execve
	return (0);
}


void	write_to_pipe(t_tree_node *node, pid_t *write_pid, int pipefd[2], t_envp *env)
{
	*write_pid = fork();
	if (*write_pid == 0)
	{
		dup2(pipefd[1], STDOUT_FILENO);
		close(pipefd[0]);
		close(pipefd[1]);
		exec_commands(node, env); // inline redirection will be handled here
		exit(0);
	}
}

void	read_from_pipe(t_tree_node *node, pid_t *read_pid, int pipefd[2], t_envp *env)
{
	*read_pid = fork();
	if (*read_pid == 0)
	{
		dup2(pipefd[0], STDIN_FILENO);
		close(pipefd[0]);
		close(pipefd[1]);
		exec_commands(node, env); // inline redirection handled here
		exit(0);
	}
}


int	execution(t_tree_node *node, t_envp *env)
{
	int	pipe_count;

	if (!node)
		return (-1);
	pipe_count = count_pipes(node);

	if (node->token == PIPE)
		return (pipe_exec(node, pipe_count, env));

	if (node->token == COMMAND || node->token == BUILT_IN)
		return (exec_commands(node, env));

	// REMOVE this:
	// if (node->token >= 3 && node->token <= 6)
	//     return handle_recirections(node, env);

	return (env->exit_code);
}
